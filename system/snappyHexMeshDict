FoamFile
{
    version         2;
    format          ascii;
    class           dictionary;
    object          snappyHexMeshDict;
}




// Exported by SnappyHexMesh GUI add-on for Blender v1.8
// Source file: C:\Users\pdh24\Desktop\Concordia Classes\Rockets\blend\CR-25 medium mesh.blend
// Export date: 2024-08-18 19:03:03.953247

// Details about SnappyHexMesh parameters can be found in annotated caseDicts:
// - For openfoam.org (development version), see
//   https://github.com/OpenFOAM/OpenFOAM-dev/blob/master/etc/caseDicts/annotated/snappyHexMeshDict
// - For openfoam.com (development version), see
//   https://develop.openfoam.com/Development/openfoam/-/blob/master/etc/caseDicts/annotated/snappyHexMeshDict
// See also links in https://openfoamwiki.net/index.php/SnappyHexMesh

#include "parameters.cs";

castellatedMesh true;
snap            true;
addLayers       false;

mergePatchFaces false;  // Avoid face merging to increase layer coverage

geometry
{
    rocket
    {
        type triSurfaceMesh;
        file "rocket.stl";
        // Min Bounds = [ 9.50825e-07 -7.36521e-02 -1.24298e-01]
        // Max Bounds = [ 3.23994e+00  1.41840e-01  1.24298e-01]
        // Area = 1.14863e+00
    }
}

castellatedMeshControls
{
    maxLocalCells   100000;
    maxGlobalCells  5000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.1;
    nCellsBetweenLevels 4;
    locationInMesh (-1 0 0);
    allowFreeStandingZoneFaces true;
    resolveFeatureAngle 130;
    // useLeakClosure true; // OpenFOAM.com option
    handleSnapProblems true;
    useTopologicalSnapDetection true;

    features
    (
        {
            file "rocket.eMesh";
            level 6;
        }

    );

    refinementSurfaces
    {
        rocket
        {
            level (4 6);
            patchInfo { type wall; }
            
        }

    }

    refinementRegions
    {
        rocket
        {
            mode distance;
            levels $refinementRegionsLevels;
        }

    }
}

snapControls
{
    nSmoothPatch 3;
    nSmoothInternal 1; // OpenFOAM.com option
    tolerance 2.0;
    nSolveIter 30;
    nRelaxIter 4;
    nFeatureSnapIter 4;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap true;
    nFaceSplitInterval -1; // OpenFOAM.com option
    releasePoints false;  // multi-region related option
    stringFeatures true;
    avoidDiagonal false;
    strictRegionSnap false;
    concaveAngle 45;
    minAreaRatio 0.3;
}

addLayersControls
{
    // Layer sizing
    relativeSizes        true;            // Interpret thickness as fraction of local cell size
    expansionRatio       1.1;            // Growth of each subsequent layer
    firstLayerThickness  $firstLayerThickness; 
    minThickness         1e-08;          // Absolute min thickness (in case local cells are extremely small)
    nGrow                0;

    // Mesh dependencies
    featureAngle         130;            // Detect sharp edges above this angle
    mergePatchFacesAngle 45;             // (OpenFOAM.com) Merge patch faces below 45° difference
    layerTerminationAngle 45;            // (OpenFOAM.com) If layers need > 45° to inflate, they terminate
    maxFaceThicknessRatio 0.5;           // Max ratio of layer thickness to adjacent cell thickness
    disableWallEdges     false;          // Keep inflation on edges

    // Mesh displacement iterations for layer addition
    nSmoothSurfaceNormals 2; 
    nSmoothThickness     10;
    nSmoothNormals       3;
    nSmoothDisplacement  30;
    nMedialAxisIter      1000;

    // Medial axis analysis 
    minMedianAxisAngle   90;
    minMedialAxisAngle   90;

    // Allow somewhat larger layers relative to medial axis:
    maxThicknessToMedialRatio 0.8;       // Loosened from 0.5 to 0.8

    slipFeatureAngle     30;
    nRelaxIter           15;

    // If using displacement-based solver (commented out by default)
    //meshShrinker        displacementMotionSolver;
    //solver              displacementLaplacian;
    //displacementLaplacianCoeffs
    //{
    //    diffusivity     quadratic inverseDistance ("wall.*");
    //}

    // Overall layering iteration/relaxation
    nBufferCellsNoExtrude 0;
    nLayerIter            50;            // Max attempts per pass
    nRelaxedIter          20;            // Relax iteration attempts
    nOuterIter            1000;          // (OpenFOAM.com) # of passes; can be reduced to ~5–10 if runtime is an issue
    additionalReporting   true;

    layers
    {
        rocket
        {
            nSurfaceLayers    5;         // # of inflation layers on the "rocket" patch
            expansionRatio    1.1;       // (Local override) can match global or differ
            firstLayerThickness $firstLayerThickness;
            //minThickness     $minThickness;
        }
    }
}


meshQualityControls
{
    // Maximum non-orthogonality allowed. Reduced for better stability.
    maxNonOrtho 75;

    // Max skewness allowed. Adjusted for internal and boundary mesh quality.
    maxBoundarySkewness 20;
    maxInternalSkewness 4;

    // Max concaveness allowed. Tighter to improve numerical stability.
    maxConcave 70;

    // Minimum projected area v.s. actual area. Ensures sufficient face quality.
    minFlatness 0.6;

    // Minimum cell pyramid volume relative to min bounding box length^3.
    // Adjusted to avoid very small cells while allowing flexibility.
    minVol 1e-12;

    // Minimum quality of tetrahedral cells. Stricter for better stability.
    minTetQuality 1e-12;

    // Minimum face twist. Ensures cells are not overly twisted.
    minTwist 0.01;

    // Minimum normalized cell determinant. Eliminates degenerate cells.
    minDeterminant 0.001;

    // Minimum face weight (0 -> 0.5). Slightly stricter for better interpolation.
    minFaceWeight 0.01;

    // Minimum volume ratio (0 -> 1). Ensures balanced cell sizes.
    minVolRatio 0.001;

    minArea -1;

    minTriangleTwist -1;

    // Advanced settings

    // Number of error distribution iterations. Slightly increased for smoother results.
    nSmoothScale 8;

    // Amount to scale back displacement at error points. Retained for balance.
    errorReduction 0.75;
}


writeFlags      ( scalarLevels layerSets layerFields );

mergeTolerance  1e-06;
