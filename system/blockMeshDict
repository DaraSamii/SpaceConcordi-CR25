FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// Exported by SnappyHexMesh GUI add-on for Blender v1.8
// Source file: C:\Users\pdh24\Desktop\Concordia Classes\Rockets\blend\CR-25 medium mesh.blend
// Export date: 2024-08-17 23:51:38.113671

#include "../system/parameters.cs"




scale 1;


nx #calc "round(($xMax - $xMin) / $cellSize)";
ny #calc "round(($yMax - $yMin) / $cellSize)";
nz #calc "round(($zMax - $zMin) / $cellSize)";

vertices
(
    ($xMin $yMin $zMin)    // Vertex 0
    ($xMax $yMin $zMin)    // Vertex 1
    ($xMax $yMax $zMin)    // Vertex 2
    ($xMin $yMax $zMin)    // Vertex 3
    ($xMin $yMin $zMax)    // Vertex 4
    ($xMax $yMin $zMax)    // Vertex 5
    ($xMax $yMax $zMax)    // Vertex 6
    ($xMin $yMax $zMax)    // Vertex 7
);

totalX #calc "($xMax - $xMin) * 1.0";

blocks
(
    hex (0 1 2 3 4 5 6 7) ($nx $ny $nz) simpleGrading (
                                                    (
                                                     (#calc "($xMin * -1.0) / $totalX"  0.25 0.1)
                                                     (#calc "3.0 / $totalX" 0.6 1)
                                                     (#calc "($xMax - 3.0) / $totalX" 0.15 20)
                                                    )
                                                    ((0.45 0.25 0.05) (0.1 0.5 1) (0.45 0.25 20 ))
                                                    ((0.45 0.25 0.05) (0.1 0.5 1) (0.45 0.25 20 ))
                                                )
);


edges
(
);

boundary
(
inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
            
        );
    }

outlet
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }

sides
    {
        type patch;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)
            (0 3 2 1)
            (4 5 6 7)
        );
    }

);
