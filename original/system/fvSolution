/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "../parameters.cs"


minIter 10;
maxIter 50;
solvers
{
    "rho.*"
    {
        solver          diagonal;
    }

    "(p|pCorr).*"
    {
        //solver          PBiCGStab;         // Bi-Conjugate Gradient Stabilized
        //preconditioner  DILU;//DIC             // Diagonal Incomplete LU (DILU)

        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-08;
        relTol          0.01;
        minIter        $minIter;
        maxIter        $maxIter;
    }

    "U.*"
    {
        solver          PBiCGStab;
        preconditioner  diagonal;
        //solver          GAMG;
        //smoother        GaussSeidel;
        tolerance       1e-12;
        relTol          1e-04;
        minIter        $minIter;
        maxIter        $maxIter;

    }

    "(k|epsilon||nuTilda|omega).*"
    {
        solver          PBiCGStab;
        preconditioner  diagonal;
        //solver          GAMG;
        //smoother        GaussSeidel;
        tolerance       1e-15;
        relTol          0;
        minIter        $minIter;
        maxIter        $maxIter;
    }

    "(h|e).*"
    {
        //solver          PBiCGStab;
        //preconditioner  diagonal;
        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-15;
        relTol          0;
        minIter        $minIter;
        maxIter        $maxIter;
    }
}


SIMPLE
{
    residualControl
    {
        p               1e-6;
        U               1e-6;
        "(k|omega|e|h)"   1e-5;
    }

    nNonOrthogonalCorrectors 2;
    // it must be transonic but not consistent
    //consistent yes;
    transonic yes;


    pRefCell        0;
    pRefValue       $P;

    pMinFactor      0.1;
    pMaxFactor      10.0;

}



relaxationFactors
{
    fields
    {
        p               0.2;
        U               0.3;
        rho             0.01;
    }
    equations
    {
        U               0.3;
        e               0.3;
        h               0.3;
        "(k|omega|nut)"     0.3;
    }
}
