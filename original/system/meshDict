/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                |
| \\      /  F ield         | cfMesh: A library for mesh generation          | 
|  \\    /   O peration     |                                                |
|   \\  /    A nd           | Author: Franjo Juretic                         | 
|    \\/     M anipulation  | E-mail: franjo.juretic@c-fields.com            |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version   2.0;
    format    ascii;
    class     dictionary;
    location  "system";
    object    meshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "../parameters.cs"

//surfaceFile "geometry/combined.fms";
surfaceFile "geometry/combined.stl";




maxCellSize $maxCellSize;
symmetryPlaneLayerTopology	1;
meshMultipleDomainsAndBaffles	0;
//nCellsBetweenLevels	7;
domainDefinition
{
    convertAllPatchesToFaceZones	1;
    detachPointsAtAllInternalPatches	0;
    domainNames	();
    generateMeshInAllDomains	1;
}

localRefinement
{
    rocket
    {
        additionalRefinementLevels	9;
        //cellSize #calc "$firstLayerThickness * 10.0";
        //refinementThickness 0.0;
    }

}

objectRefinements
{

    box0
    {
        type box;
        //cellSize #calc "$maxCellSize / 2.0";
        additionalRefinementLevels	1;
        centre (4.5 0.1 0.1);
        lengthX 13;
        lengthY 4;
        lengthZ 4;
    }
    box1
    {
        type box;
        //cellSize #calc "$maxCellSize / 2.0";
        additionalRefinementLevels	2;
        centre (3.5 0.1 0.1);
        lengthX 10;
        lengthY 3;
        lengthZ 3;
    }
    
    box2
    {
        type box;
        //cellSize #calc "$maxCellSize / 4.0";
        additionalRefinementLevels	3;

        centre (2.5 0.1 0.1);
        lengthX 7;
        lengthY 2;
        lengthZ 2;
    }
    box3
    {
        type box;
        //cellSize #calc "$maxCellSize / 8.0";
        additionalRefinementLevels	4;
        centre (1.5 0.1 0.1);
        lengthX 4;
        lengthY 1;
        lengthZ 1;
    }
    
}

boundaryLayers
{
    patchBoundaryLayers
    {
        rocket
        {
            nLayers 15;
            thicknessRatio 1.2;
            //maxFirstLayerThickness $firstLayerThickness;

            allowDiscontinuity 0;
        }
    }

    optimiseLayer true;

    optimisationParameters
    {
        nSmoothNormals 10;
        maxNumIterations 20;
        featureSizeFactor 0.4;
        reCalculateNormals true;
        relThicknessTol 0.1;
        
    }
}

renameBoundary
{
    patchBoundaryLayers
    {
        inlet
        {
             type            patch;
        }
        outlet
        {
            type            patch;    
        }
        sides
        {
            type            patch;    
        }
        rocket
        {
            type            wall;
        }
    }
}



// ************************************************************************* //